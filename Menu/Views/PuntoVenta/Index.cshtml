
@{
    ViewBag.Title = "Lugares";
}

<div class="col-xs-12">
    <div class="text-center">
        <div class="h5 mid-line">
            <span class="mid-title">@ViewBag.Title</span>
        </div>
        <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac cursus tellus. Suspendisse porttitor faucibus metus, nec varius dui eleifend et. Ut lacinia, ligula ut tempus feugiat, neque neque pellentesque lorem, vitae aliquam velit lorem et odio. Proin dictum aliquet nibh, vel venenatis leo accumsan a. Nunc ut turpis nec lectus ornare pellentesque. Sed eget pellentesque tortor. Donec a mauris vel tellus convallis dignissim. Nam in feugiat magna. Fusce et augue ipsum. Donec a tincidunt odio. Phasellus id nibh vitae libero tempus sodales. Donec vulputate nisl id orci tempor volutpat in non neque.
        </p>
        <p>
            Nullam egestas, ante at lacinia aliquet, tortor justo rutrum justo, sed rutrum arcu felis sed ligula. Cras volutpat urna consectetur ex ultrices gravida. Donec placerat purus ac vulputate accumsan. Integer vitae suscipit urna. Aliquam tincidunt sit amet velit vitae semper. Aliquam erat volutpat. Curabitur at mi viverra sapien placerat convallis sed in turpis. Vivamus vitae dui ac diam blandit sodales vitae vel massa. Suspendisse tristique pretium tempus. Suspendisse potenti. Fusce posuere, dui at vehicula egestas, nisi orci imperdiet tellus, a convallis neque sem sed leo. Praesent semper ex justo, eget accumsan nibh viverra sit amet. Vivamus consequat nisl ac nisi sodales fermentum.
        </p>
        <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac cursus tellus. Suspendisse porttitor faucibus metus, nec varius dui eleifend et. Ut lacinia, ligula ut tempus feugiat, neque neque pellentesque lorem, vitae aliquam velit lorem et odio. Proin dictum aliquet nibh, vel venenatis leo accumsan a. Nunc ut turpis nec lectus ornare pellentesque. Sed eget pellentesque tortor. Donec a mauris vel tellus convallis dignissim. Nam in feugiat magna. Fusce et augue ipsum. Donec a tincidunt odio. Phasellus id nibh vitae libero tempus sodales. Donec vulputate nisl id orci tempor volutpat in non neque.
        </p>
        <p>
            Nullam egestas, ante at lacinia aliquet, tortor justo rutrum justo, sed rutrum arcu felis sed ligula. Cras volutpat urna consectetur ex ultrices gravida. Donec placerat purus ac vulputate accumsan. Integer vitae suscipit urna. Aliquam tincidunt sit amet velit vitae semper. Aliquam erat volutpat. Curabitur at mi viverra sapien placerat convallis sed in turpis. Vivamus vitae dui ac diam blandit sodales vitae vel massa. Suspendisse tristique pretium tempus. Suspendisse potenti. Fusce posuere, dui at vehicula egestas, nisi orci imperdiet tellus, a convallis neque sem sed leo. Praesent semper ex justo, eget accumsan nibh viverra sit amet. Vivamus consequat nisl ac nisi sodales fermentum.
        </p>
    </div>
</div>

<div class="collapse" id="overlay">
    <div id="overlay-content" class="container">
        @Html.Action("NuevoPV", "PuntoVenta")
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        class Contacto {
            static get contactoSpan() { 
                return '@Html.TextBox("PuntoVenta.Contactos[-].Tipo", null, new { list = "tiposContacto", placeholder = "Tipo", @class = "pull-left form-control input-sm tipo-contacto" })' +
                        '@Html.TextBox("PuntoVenta.Contactos[-].Dato", null, new { @class = "pull-left form-control input-sm dato-contacto" })' + 
                        '<span id="RemovePuntoVenta_Contactos_-_" class="glyphicon glyphicon-remove text-center text-danger"></span>'; 
            }

            static get plusBtn() {
                return $('#addContactoButton');
            }

            static get inputGroups() {
                return $('[id^="PuntoVenta_Contactos"].input-group');
            }

            static tipo(idx) {
                return $('[id^="PuntoVenta_Contactos"][id$="_Tipo"]')[idx];
            }

            static dato(idx) {
                return $('[id^="PuntoVenta_Contactos"][id$="_Dato"]')[idx];
            }

            static removeBtn(idx) {
                return $('[id^="RemovePuntoVenta_Contactos"]')[idx];
            }

            static agregar(contacto) {
                $('#ListaContactos').append(contacto.inputGroup);
                contacto.addEventListeners();
                Contacto.plusBtn.addClass('disabled');
                if (Contacto.inputGroups.length > 1) {
                    $(Contacto.removeBtn(0)).show();
                } else {
                    $(contacto.removeBtn).hide();
                }
            }

            static agregarNuevo() {
                var nuevo = new Contacto();    
                Contacto.agregar(nuevo);
                return nuevo;
            }

            static initPlusBtn() {
                Contacto.plusBtn.on('click', function () {
                    if (!$(this).hasClass('disabled')) {
                        Contacto.agregarNuevo();
                    }
                });
            }

            static updatePlusBtn(idx) {
                if (Contacto.tipo(idx).value && Contacto.dato(idx).value) {
                    Contacto.plusBtn.removeClass('disabled');
                }
                else {
                    Contacto.plusBtn.addClass('disabled');
                }
            }

            constructor() {
                this.index = Contacto.inputGroups.length > 0 ? Contacto.inputGroups.length : 0;
                this.inputGroup = document.createElement('span');
                this.inputGroup.setAttribute('id', 'PuntoVenta_Contactos_' + this.index + '_');
                this.inputGroup.setAttribute('class', 'input-group');
                var re1 = new RegExp('\\[-]', 'g');
                var re2 = new RegExp('_-_', 'g');
                this.inputGroup.innerHTML = Contacto.contactoSpan.replace(re1, '[' + this.index + ']').replace(re2, '_' + this.index + '_');
            }

            get index() {
                return this._index;
            }
            set index(idx) {
                this._index = idx;
            }
            get tipo() {
                return Contacto.tipo(this.index);
            }
            get dato() {
                return Contacto.dato(this.index);
            }
            get removeBtn() {
                return Contacto.removeBtn(this.index);
            }
            get inputGroup() {
                return this._inputGroup;
            }
            set inputGroup(inputGroup) {
                this._inputGroup = inputGroup;
            }

            updatePlusBtn() {
                Contacto.updatePlusBtn(this.id[21]);
            }

            updateDatoField() {
                var dato = $('#' + this.id.replace('Tipo', 'Dato'));
                switch (this.value) {
                    case 'Facebook':
                        dato.val('http://www.facebook.com/');
                        break;
                    case 'Twitter':
                        dato.val('http://www.twitter.com/');
                        break;
                    case 'Celular':
                    case 'Local':
                    case 'Whatsapp':
                        dato.attr('type', 'tel');
                        dato.attr('pattern', '[0-9]{10}');
                        dato.attr('title', '10 dígitos');
                        dato.val('');
                        break;
                }
                //Contacto.plusBtn.addClass('disabled');
                Contacto.updatePlusBtn(this.id[21]);
            }

            remove() {
                this.parentNode.parentNode.removeChild(this.parentNode);
                if (Contacto.inputGroups.length == 1) {
                    $(Contacto.removeBtn(0)).hide();
                }
                for (var i = this.id[27]; i < Contacto.inputGroups.length; i++) {
                    var re1 = new RegExp('\\[' + Contacto.inputGroups[i].id[21] + ']', 'g');
                    var re2 = new RegExp('_' + Contacto.inputGroups[i].id[21] + '_', 'g');
                    Contacto.inputGroups[i].id = Contacto.inputGroups[i].id.replace(re2, '_' + i + '_');
                    Contacto.tipo(i).id = Contacto.tipo(i).id.replace(re2, '_' + i + '_');
                    Contacto.tipo(i).name = Contacto.tipo(i).name.replace(re1, '[' + i + ']');
                    Contacto.dato(i).id = Contacto.dato(i).id.replace(re2, '_' + i + '_');
                    Contacto.dato(i).name = Contacto.dato(i).name.replace(re1, '[' + i + ']');
                    Contacto.removeBtn(i).id = Contacto.removeBtn(i).id.replace(re2, '_' + i + '_');
                }
                Contacto.plusBtn.removeClass('disabled');
            }

            addEventListeners() {
                $(this.tipo).on('change keyup paste', this.updateDatoField);
                $(this.dato).on('change keyup paste', this.updatePlusBtn);
                $(this.removeBtn).on('click', this.remove)
            }
        }

        $(document).ready(function () {
            Contacto.initPlusBtn();
            var Contactos = [new Contacto()];
            Contacto.agregar(Contactos[0]);
        });

    </script>
}

@section Styles {
    <style type="text/css">
        .form-plus-btn {
            margin: 10px 0; 
            width: 280px; 
            display: table;
        }
        .form-plus-btn > .glyphicon-plus-sign {
            cursor: pointer;
            color: #000;
        }
        .form-plus-btn > .glyphicon-plus-sign:hover {
            color: #777;
        }
        .form-plus-btn > span.disabled {
            color: #aaa;
            cursor: default;
        }
        .form-plus-btn > span.disabled:hover {
            color: #aaa;
        }
    </style>
}
